language: go

sudo: required

go_import_path: github.com/habitat-sh/habitat-operator

# This moves Kubernetes specific config files.
env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - K8S_VERSION=v1.10.0
    - MINIKUBE_VERSION=v0.26.0
    - CODEGEN_VERSION=release-1.9

# Skip installation of dependencies since they are already in vendor.
install: true

go:
  - stable

git:
  depth: 1

before_script:
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube config set WantReportErrorPrompt false
# TODO: remove the --bootstrapper flag once this issue is solved: https://github.com/kubernetes/minikube/issues/2704
- sudo minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=${K8S_VERSION} --extra-config=apiserver.Authorization.Mode=RBAC
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Clone the code generator repo
- mkdir -p $GOPATH/src/k8s.io && git clone https://github.com/kubernetes/code-generator.git --branch $CODEGEN_VERSION $GOPATH/src/k8s.io/code-generator
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

script:
- CODEGEN_PKG=../../../../src/k8s.io/code-generator hack/verify-codegen.sh
- make test
- make TAG=testing image && make TESTIMAGE=habitat/habitat-operator:testing e2e

after_failure:
- kubectl logs -lhabitat=true --tail=100
